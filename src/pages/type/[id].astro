---
import { Image } from "astro:assets";
import Mainlayout from "../../layouts/Mainlayout.astro";
import { apiDetails } from "../../settings";

export async function getStaticPaths() {
  const data = await fetch(`${apiDetails.supabaseUrl}/market_type?select=*`, {
    method: "GET",
    headers: {
      apikey: apiDetails.supabaseAnonKey,
    },
  }).then((response) => response.json());

  // Laver liste med billeder i imageFolder mappen. Astro doc: https://docs.astro.build/en/recipes/dynamically-importing-images/
  const imageFolder = "/src/assets/img/flid-posters";
  const images = import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/img/flid-posters/*.{jpeg,jpg,png,gif,webp}"
  );
  const imageFotosFolder = "/src/assets/img/market_type";
  const imageFotos = import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/img/market_type/*.{jpeg,jpg,png,gif,webp}"
  );

  return data.map((type) => {
    // Check if the image is in our folder, and throw an error if its not.
    if (!images[`${imageFolder}/${type.image_last_poster}`]) {
      throw new Error(
        `"${type.image_last_poster}" ser ud til at mangle i mappen ${imageFolder}`
      );
    }
    if (!imageFotos[`${imageFotosFolder}/${type.image_last_market}`]) {
      throw new Error(
        `"${type.image_last_poster}" ser ud til at mangle i mappen ${imageFolder}`
      );
    }

    return {
      params: { id: type.id },
      props: {
        type,
        poster: images[`${imageFolder}/${type.image_last_poster}`](),
        fotos: imageFotos[`${imageFotosFolder}/${type.image_last_market}`](),
      },
    };
  });
}

interface Props {
  type: any;
  poster: ImageMetadata;
  fotos: ImageMetadata;
}

const { type, poster, fotos } = Astro.props;
---

<Mainlayout>
  <main>
    <h1>{type.type}</h1>
    <Image src={poster} alt={type.type} />
    <Image src={fotos} alt={type.type} />
  </main>
</Mainlayout>

<style>
  h1 {
    text-transform: capitalize;
  }
</style>
